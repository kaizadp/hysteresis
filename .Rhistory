# 1. core key
# 2. initial core weights, including dry weight
# 3. mass tracking file
read_massdata <- function(fqfn) {
ca <- readxl::read_excel("data/Core_key.xlsx") %>%
dplyr::select(1:7)
dry <- read_excel("data/Core_weights.xlsx", sheet = "initial") %>%
dplyr::select(Core, EmptyWt_g, DryWt_g)
readxl::read_excel("data/Core_weights.xlsx", sheet = "Mass_tracking") %>%
filter(!is.na(Site), Site != "AMB", Core != "0") %>% # remove unnecessary crap
left_join(ca, by = "Core") %>%
left_join(dry, by = "Core") %>%
filter(is.na(skip)) %>% # exclude the rows as needed
# dplyr::select(Core, Stop_datetime, Seq.Program, Core_assignment, EmptyWt_g, DryWt_g, Mass_g, Moisture) %>%
dplyr::mutate(Stop_datetime = as.POSIXct(strptime(Stop_datetime,format = "%m/%d/%Y %H:%M")), #f-ing datetime
# calculate moisture content for each core
DryWt_g = round(DryWt_g,2),
MoistWt_g = Mass_g - EmptyWt_g,
Water_g = MoistWt_g - DryWt_g,
Moisture_perc = round(((Water_g/DryWt_g)*100),2))
}
plan <- drake_plan(
massdata_file = "data/Core_weights.xlsx",
massdata = read_massdata(massdata_file),
# README file and diagnostics
moisture = rmarkdown::render(
knitr_in("1b-moisture_markdown.Rmd"),
output_file = file_out("1b-moisture_markdown.md"),
quiet = TRUE)
)
a = readd(massdata)
View(a)
# create a function that combines all the data needed for the weight/moisture calculation
# 1. core key
# 2. initial core weights, including dry weight
# 3. mass tracking file
read_massdata <- function(fqfn) {
ca <- readxl::read_excel("data/Core_key.xlsx") %>%
dplyr::select(1:7)
dry <- read_excel("data/Core_weights.xlsx", sheet = "initial") %>%
dplyr::select(Core, EmptyWt_g, DryWt_g)
readxl::read_excel("data/Core_weights.xlsx", sheet = "Mass_tracking") %>%
filter(!is.na(Site), Site != "AMB", Core != "0") %>% # remove unnecessary crap
left_join(ca, by = "Core") %>%
left_join(dry, by = "Core") %>%
filter(is.na(skip)) %>% # exclude the rows as needed
# dplyr::select(Core, Stop_datetime, Seq.Program, Core_assignment, EmptyWt_g, DryWt_g, Mass_g, Moisture) %>%
dplyr::mutate(Stop_datetime = as.POSIXct(strptime(Stop_datetime,format = "%m/%d/%Y %H:%M")), #f-ing datetime
# calculate moisture content for each core
DryWt_g = round(DryWt_g,2),
MoistWt_g = Mass_g - EmptyWt_g,
Water_g = MoistWt_g - DryWt_g,
Moisture_perc = round(((Water_g/DryWt_g)*100),2))
}
plan <- drake_plan(
massdata_file = "data/Core_weights.xlsx",
massdata = read_massdata(massdata_file),
# README file and diagnostics
moisture = rmarkdown::render(
knitr_in("1b-moisture_markdown.Rmd"),
output_file = file_out("1b-moisture_markdown.md"),
quiet = TRUE)
)
a = readd(massdata)
ca <- readxl::read_excel("data/Core_key.xlsx") %>%
dplyr::select(1:7)
dry <- read_excel("data/Core_weights.xlsx", sheet = "initial") %>%
dplyr::select(Core, EmptyWt_g, DryWt_g)
mass =  readxl::read_excel("data/Core_weights.xlsx", sheet = "Mass_tracking") %>%
filter(!is.na(Site), Site != "AMB", Core != "0") %>% # remove unnecessary crap
left_join(ca, by = "Core") %>%
left_join(dry, by = "Core") %>%
filter(is.na(skip)) %>% # exclude the rows as needed
dplyr::select(Core, Stop_datetime, Seq.Program, Core_assignment, EmptyWt_g, DryWt_g, Mass_g, Moisture) %>%
dplyr::mutate(Stop_datetime = as.POSIXct(strptime(Stop_datetime,format = "%m/%d/%Y %H:%M")), #f-ing datetime
#  # calculate moisture content for each core
DryWt_g = round(DryWt_g,2),
MoistWt_g = Mass_g - EmptyWt_g,
Water_g = MoistWt_g - DryWt_g,
Moisture_perc = round(((Water_g/DryWt_g)*100),2))
mass %>% group_by(Core) %>%
dplyr::mutate(Hours = as.integer(difftime(Stop_datetime, min(Stop_datetime), units = "hours"))) ->
massdata
ggplot(massdata, aes(Stop_datetime, Moisture_perc)) +
geom_point() + geom_line()+
facet_wrap(~Core_assignment)+
ylim(0,175)
ca <- readxl::read_excel("data/Core_key.xlsx") %>%
dplyr::select(1:7)
dry <- read_excel("data/Core_weights.xlsx", sheet = "initial") %>%
dplyr::select(Core, EmptyWt_g, DryWt_g)
mass =  readxl::read_excel("data/Core_weights.xlsx", sheet = "Mass_tracking") %>%
filter(!is.na(Site), Site != "AMB", Core != "0") %>% # remove unnecessary crap
left_join(ca, by = "Core") %>%
left_join(dry, by = "Core") %>%
filter(is.na(skip)) %>% # exclude the rows as needed
dplyr::select(Core, Stop_datetime, Seq.Program, Core_assignment, EmptyWt_g, DryWt_g, Mass_g, Moisture) %>%
dplyr::mutate(Stop_datetime = as.POSIXct(strptime(Stop_datetime,format = "%m/%d/%Y %H:%M")), #f-ing datetime
#  # calculate moisture content for each core
DryWt_g = round(DryWt_g,2),
MoistWt_g = Mass_g - EmptyWt_g,
Water_g = MoistWt_g - DryWt_g,
Moisture_perc = round(((Water_g/DryWt_g)*100),2))
mass %>% group_by(Core) %>%
dplyr::mutate(Hours = as.integer(difftime(Stop_datetime, min(Stop_datetime), units = "hours"))) ->
massdata
ggplot(massdata, aes(Stop_datetime, Moisture_perc)) +
geom_point() + geom_line()+
facet_wrap(~Core_assignment)+
ylim(0,175)
ggplot(massdata, aes(Stop_datetime, Moisture_perc)) +
geom_point() + geom_line()+
facet_wrap(~Core_assignment)
ggplot(massdata, aes(Stop_datetime, Moisture_perc)) +
geom_point() + geom_line()+
facet_wrap(~Core_assignment)+
ylim(0,140)
ggplot(massdata, aes(Stop_datetime, Moisture_perc)) +
geom_point() + geom_line()+
facet_wrap(~Core_assignment)+
ylim(0,150)
ca <- readxl::read_excel("data/Core_key.xlsx") %>%
dplyr::select(1:7)
dry <- read_excel("data/Core_weights.xlsx", sheet = "initial") %>%
dplyr::select(Core, EmptyWt_g, DryWt_g)
mass =  readxl::read_excel("data/Core_weights.xlsx", sheet = "Mass_tracking") %>%
filter(!is.na(Site), Site != "AMB", Core != "0") %>% # remove unnecessary crap
left_join(ca, by = "Core") %>%
left_join(dry, by = "Core") %>%
filter(is.na(skip)) %>% # exclude the rows as needed
dplyr::select(Core, Stop_datetime, Seq.Program, Core_assignment, EmptyWt_g, DryWt_g, Mass_g, Moisture) %>%
dplyr::mutate(Stop_datetime = as.POSIXct(strptime(Stop_datetime,format = "%m/%d/%Y %H:%M")), #f-ing datetime
#  # calculate moisture content for each core
DryWt_g = round(DryWt_g,2),
MoistWt_g = Mass_g - EmptyWt_g,
Water_g = MoistWt_g - DryWt_g,
Moisture_perc = round(((Water_g/DryWt_g)*100),2))
mass %>% group_by(Core) %>%
dplyr::mutate(Hours = as.integer(difftime(Stop_datetime, min(Stop_datetime), units = "hours"))) ->
massdata
ggplot(massdata, aes(Stop_datetime, Moisture_perc)) +
geom_point() + geom_line()+
facet_wrap(~Core_assignment)+
ylim(0,150)
27+30+30
27+30+(0.75*30)
(0.75*30)
27+30+(0.5*30)
27+30+(0.4*30)
mass %>% group_by(Core) %>%
dplyr::mutate(Hours = as.integer(difftime(Stop_datetime, min(Stop_datetime), units = "hours"))) ->
massdata
ggplot(massdata, aes(Stop_datetime, Moisture_perc)) +
geom_point() + geom_line()+
facet_wrap(~Core_assignment)+
ylim(0,175)
massdata %>%
group_by(Core) %>%
dplyr::summarise(moisture = if_else(Stop_datetime = max(Stop_datetime),Moisture_perc,NA)) %>%
dplyr::filter(!is.na(moisture))->current_moisture
massdata %>%
group_by(Core) %>%
dplyr::mutate(moisture = if_else(Stop_datetime = max(Stop_datetime),Moisture_perc,NA)) %>%
dplyr::filter(!is.na(moisture))->current_moisture
massdata %>%
group_by(Core) %>%
mutate(moisture = if_else(Stop_datetime = max(Stop_datetime),Moisture_perc,NA)) %>%
dplyr::filter(!is.na(moisture))->current_moisture
massdata %>%
group_by(Core) %>%
mutate(moisture = if_else(Stop_datetime == max(Stop_datetime),Moisture_perc,NA)) %>%
dplyr::filter(!is.na(moisture))->current_moisture
massdata %>%
group_by(Core) %>%
mutate(moisture = if_else(Stop_datetime == max(Stop_datetime),Moisture_perc,"NA")) %>%
dplyr::filter(!is.na(moisture))->current_moisture
massdata %>%
group_by(Core) %>%
mutate(moisture = if_else(Stop_datetime == max(Stop_datetime),Moisture_perc,)) %>%
dplyr::filter(!is.na(moisture))->current_moisture
massdata %>%
group_by(Core) %>%
mutate(moisture = if_else(Stop_datetime == max(Stop_datetime),Moisture_perc,as.numeric(NA))) %>%
dplyr::filter(!is.na(moisture))->current_moisture
View(current_moisture)
massdata %>%
group_by(Core) %>%
mutate(moisture = if_else(Stop_datetime == max(Stop_datetime),Moisture_perc,as.numeric(NA))) %>%
dplyr::filter(!is.na(moisture)) %>%
ungroup %>%
group_by(Core_assignment) %>%
dplyr::summarize(moisture = mean(moisture))->current_moisture
massdata %>%
group_by(Core) %>%
mutate(moisture = if_else(Stop_datetime == max(Stop_datetime),Moisture_perc,as.numeric(NA))) %>%
dplyr::filter(!is.na(moisture)) %>%
ungroup %>%
group_by(Core_assignment) %>%
dplyr::summarize(moisture = round(mean(moisture),2))->current_moisture
View(massdata)
source("1-moisture_tracking.R")
mass %>% group_by(Core) %>%
dplyr::mutate(Hours = as.integer(difftime(Stop_datetime, min(Stop_datetime), units = "hours"))) ->
massdata
ggplot(massdata, aes(Stop_datetime, Moisture_perc)) +
geom_point() + geom_line()+
facet_wrap(~Core_assignment)+
ylim(0,175)
massdata %>%
#group_by(Core) %>%
ungroup %>%
mutate(moisture = if_else(Stop_datetime == max(Stop_datetime),Moisture_perc,as.numeric(NA))) %>%
dplyr::filter(!is.na(moisture)) %>%
ungroup %>%
group_by(Core_assignment) %>%
dplyr::summarize(moisture = round(mean(moisture),2))->current_moisture
View(current_moisture)
massdata %>%
#group_by(Core) %>%
ungroup %>%
mutate(moisture = if_else(Stop_datetime == max(Stop_datetime),Moisture_perc,as.numeric(NA))) %>%
dplyr::filter(!is.na(moisture)) ->current_moisture
massdata %>%
#group_by(Core) %>%
ungroup %>%
mutate(moisture = if_else(Stop_datetime == max(Stop_datetime),Moisture_perc,as.numeric(NA)))->current_moisture
View(current_moisture)
library(drake)
pkgconfig::set_config("drake::strings_in_dots" = "literals")
library(ggplot2)
theme_set(theme_bw())
library(googlesheets)
library(readxl)
library(tidyr)
library(dplyr)
# create a function that combines all the data needed for the weight/moisture calculation
# 1. core key
# 2. initial core weights, including dry weight
# 3. mass tracking file
#  read_massdata <- function(fqfn) {
#    ca <- readxl::read_excel("data/Core_key.xlsx") %>%
#      dplyr::select(1:7)
#
#    dry <- read_excel("data/Core_weights.xlsx", sheet = "initial") %>%
#      dplyr::select(Core, EmptyWt_g, DryWt_g)
#
#   readxl::read_excel("data/Core_weights.xlsx", sheet = "Mass_tracking") %>%
#      filter(!is.na(Site), Site != "AMB", Core != "0") %>% # remove unnecessary crap
#      left_join(ca, by = "Core") %>%
#      left_join(dry, by = "Core") %>%
#      filter(is.na(skip)) %>% # exclude the rows as needed
#     # dplyr::select(Core, Stop_datetime, Seq.Program, Core_assignment, EmptyWt_g, DryWt_g, Mass_g, Moisture) %>%
#      dplyr::mutate(Stop_datetime = as.POSIXct(strptime(Stop_datetime,format = "%m/%d/%Y %H:%M")), #f-ing datetime
#  # calculate moisture content for each core
#             DryWt_g = round(DryWt_g,2),
#             MoistWt_g = Mass_g - EmptyWt_g,
#             Water_g = MoistWt_g - DryWt_g,
#             Moisture_perc = round(((Water_g/DryWt_g)*100),2))
#  }
### DOING THIS WITHOUT F-ING DRAKE
ca <- readxl::read_excel("data/Core_key.xlsx") %>%
dplyr::select(1:7)
dry <- read_excel("data/Core_weights.xlsx", sheet = "initial") %>%
dplyr::select(Core, EmptyWt_g, DryWt_g)
mass =  readxl::read_excel("data/Core_weights.xlsx", sheet = "Mass_tracking") %>%
filter(!is.na(Site), Site != "AMB", Core != "0") %>% # remove unnecessary crap
left_join(ca, by = "Core") %>%
left_join(dry, by = "Core") %>%
filter(is.na(skip)) %>% # exclude the rows as needed
dplyr::select(Core, Stop_datetime, Seq.Program, Core_assignment, EmptyWt_g, DryWt_g, Mass_g, Moisture) %>%
dplyr::mutate(Stop_datetime = as.POSIXct(strptime(Stop_datetime,format = "%m/%d/%Y %H:%M")), #f-ing datetime
#  # calculate moisture content for each core
DryWt_g = round(DryWt_g,2),
MoistWt_g = Mass_g - EmptyWt_g,
Water_g = MoistWt_g - DryWt_g,
Moisture_perc = round(((Water_g/DryWt_g)*100),2))
View(mass)
# HYSTERESIS AND SOIL C
# Kaizad F. Patel
# Oct. 25, 2019
# tracking moisture content in soil cores
### taken from BBL's script TESDrydown/drake_plan.R
# hit run/knit on the RMarkdown file, no need to run this script separately.
# drake plan
library(drake)
pkgconfig::set_config("drake::strings_in_dots" = "literals")
library(ggplot2)
theme_set(theme_bw())
library(googlesheets)
library(readxl)
library(tidyr)
library(dplyr)
# create a function that combines all the data needed for the weight/moisture calculation
# 1. core key
# 2. initial core weights, including dry weight
# 3. mass tracking file
#  read_massdata <- function(fqfn) {
#    ca <- readxl::read_excel("data/Core_key.xlsx") %>%
#      dplyr::select(1:7)
#
#    dry <- read_excel("data/Core_weights.xlsx", sheet = "initial") %>%
#      dplyr::select(Core, EmptyWt_g, DryWt_g)
#
#   readxl::read_excel("data/Core_weights.xlsx", sheet = "Mass_tracking") %>%
#      filter(!is.na(Site), Site != "AMB", Core != "0") %>% # remove unnecessary crap
#      left_join(ca, by = "Core") %>%
#      left_join(dry, by = "Core") %>%
#      filter(is.na(skip)) %>% # exclude the rows as needed
#     # dplyr::select(Core, Stop_datetime, Seq.Program, Core_assignment, EmptyWt_g, DryWt_g, Mass_g, Moisture) %>%
#      dplyr::mutate(Stop_datetime = as.POSIXct(strptime(Stop_datetime,format = "%m/%d/%Y %H:%M")), #f-ing datetime
#  # calculate moisture content for each core
#             DryWt_g = round(DryWt_g,2),
#             MoistWt_g = Mass_g - EmptyWt_g,
#             Water_g = MoistWt_g - DryWt_g,
#             Moisture_perc = round(((Water_g/DryWt_g)*100),2))
#  }
### DOING THIS WITHOUT F-ING DRAKE
ca <- readxl::read_excel("data/Core_key.xlsx") %>%
dplyr::select(1:7)
dry <- read_excel("data/Core_weights.xlsx", sheet = "initial") %>%
dplyr::select(Core, EmptyWt_g, DryWt_g)
mass =  readxl::read_excel("data/Core_weights.xlsx", sheet = "Mass_tracking") %>%
filter(!is.na(Site), Site != "AMB", Core != "0") %>% # remove unnecessary crap
left_join(ca, by = "Core") %>%
left_join(dry, by = "Core") %>%
filter(is.na(skip)) %>% # exclude the rows as needed
dplyr::select(Core, Stop_datetime, Seq.Program, Core_assignment, EmptyWt_g, DryWt_g, Mass_g, Moisture) %>%
dplyr::mutate(Stop_datetime = as.POSIXct(strptime(Stop_datetime,format = "%m/%d/%Y %H:%M")), #f-ing datetime
#  # calculate moisture content for each core
DryWt_g = round(DryWt_g,2),
MoistWt_g = Mass_g - EmptyWt_g,
Water_g = MoistWt_g - DryWt_g,
Moisture_perc = round(((Water_g/DryWt_g)*100),2))
View(mass)
# HYSTERESIS AND SOIL C
# Kaizad F. Patel
# Oct. 25, 2019
# tracking moisture content in soil cores
### taken from BBL's script TESDrydown/drake_plan.R
# hit run/knit on the RMarkdown file, no need to run this script separately.
# drake plan
library(drake)
pkgconfig::set_config("drake::strings_in_dots" = "literals")
library(ggplot2)
theme_set(theme_bw())
library(googlesheets)
library(readxl)
library(tidyr)
library(dplyr)
# create a function that combines all the data needed for the weight/moisture calculation
# 1. core key
# 2. initial core weights, including dry weight
# 3. mass tracking file
#  read_massdata <- function(fqfn) {
#    ca <- readxl::read_excel("data/Core_key.xlsx") %>%
#      dplyr::select(1:7)
#
#    dry <- read_excel("data/Core_weights.xlsx", sheet = "initial") %>%
#      dplyr::select(Core, EmptyWt_g, DryWt_g)
#
#   readxl::read_excel("data/Core_weights.xlsx", sheet = "Mass_tracking") %>%
#      filter(!is.na(Site), Site != "AMB", Core != "0") %>% # remove unnecessary crap
#      left_join(ca, by = "Core") %>%
#      left_join(dry, by = "Core") %>%
#      filter(is.na(skip)) %>% # exclude the rows as needed
#     # dplyr::select(Core, Stop_datetime, Seq.Program, Core_assignment, EmptyWt_g, DryWt_g, Mass_g, Moisture) %>%
#      dplyr::mutate(Stop_datetime = as.POSIXct(strptime(Stop_datetime,format = "%m/%d/%Y %H:%M")), #f-ing datetime
#  # calculate moisture content for each core
#             DryWt_g = round(DryWt_g,2),
#             MoistWt_g = Mass_g - EmptyWt_g,
#             Water_g = MoistWt_g - DryWt_g,
#             Moisture_perc = round(((Water_g/DryWt_g)*100),2))
#  }
### DOING THIS WITHOUT F-ING DRAKE
ca <- readxl::read_excel("data/Core_key.xlsx") %>%
dplyr::select(1:7)
dry <- read_excel("data/Core_weights.xlsx", sheet = "initial") %>%
dplyr::select(Core, EmptyWt_g, DryWt_g)
mass =  readxl::read_excel("data/Core_weights.xlsx", sheet = "Mass_tracking") %>%
filter(!is.na(Site), Site != "AMB", Core != "0") %>% # remove unnecessary crap
left_join(ca, by = "Core") %>%
left_join(dry, by = "Core") %>%
filter(is.na(skip)) %>% # exclude the rows as needed
dplyr::select(Core, Stop_datetime, Seq.Program, Core_assignment, EmptyWt_g, DryWt_g, Mass_g, Moisture) %>%
dplyr::mutate(Stop_datetime = as.POSIXct(strptime(Stop_datetime,format = "%m/%d/%Y %H:%M")), #f-ing datetime
#  # calculate moisture content for each core
DryWt_g = round(DryWt_g,2),
MoistWt_g = Mass_g - EmptyWt_g,
Water_g = MoistWt_g - DryWt_g,
Moisture_perc = round(((Water_g/DryWt_g)*100),2))
View(mass)
# HYSTERESIS AND SOIL C
# Kaizad F. Patel
# Oct. 25, 2019
# tracking moisture content in soil cores
### taken from BBL's script TESDrydown/drake_plan.R
# hit run/knit on the RMarkdown file, no need to run this script separately.
# drake plan
library(drake)
pkgconfig::set_config("drake::strings_in_dots" = "literals")
library(ggplot2)
theme_set(theme_bw())
library(googlesheets)
library(readxl)
library(tidyr)
library(dplyr)
# create a function that combines all the data needed for the weight/moisture calculation
# 1. core key
# 2. initial core weights, including dry weight
# 3. mass tracking file
#  read_massdata <- function(fqfn) {
#    ca <- readxl::read_excel("data/Core_key.xlsx") %>%
#      dplyr::select(1:7)
#
#    dry <- read_excel("data/Core_weights.xlsx", sheet = "initial") %>%
#      dplyr::select(Core, EmptyWt_g, DryWt_g)
#
#   readxl::read_excel("data/Core_weights.xlsx", sheet = "Mass_tracking") %>%
#      filter(!is.na(Site), Site != "AMB", Core != "0") %>% # remove unnecessary crap
#      left_join(ca, by = "Core") %>%
#      left_join(dry, by = "Core") %>%
#      filter(is.na(skip)) %>% # exclude the rows as needed
#     # dplyr::select(Core, Stop_datetime, Seq.Program, Core_assignment, EmptyWt_g, DryWt_g, Mass_g, Moisture) %>%
#      dplyr::mutate(Stop_datetime = as.POSIXct(strptime(Stop_datetime,format = "%m/%d/%Y %H:%M")), #f-ing datetime
#  # calculate moisture content for each core
#             DryWt_g = round(DryWt_g,2),
#             MoistWt_g = Mass_g - EmptyWt_g,
#             Water_g = MoistWt_g - DryWt_g,
#             Moisture_perc = round(((Water_g/DryWt_g)*100),2))
#  }
### DOING THIS WITHOUT F-ING DRAKE
ca <- readxl::read_excel("data/Core_key.xlsx") %>%
dplyr::select(1:7)
dry <- read_excel("data/Core_weights.xlsx", sheet = "initial") %>%
dplyr::select(Core, EmptyWt_g, DryWt_g)
mass =  readxl::read_excel("data/Core_weights.xlsx", sheet = "Mass_tracking") %>%
filter(!is.na(Site), Site != "AMB", Core != "0") %>% # remove unnecessary crap
left_join(ca, by = "Core") %>%
left_join(dry, by = "Core") %>%
filter(is.na(skip)) %>% # exclude the rows as needed
dplyr::select(Core, Stop_datetime, Seq.Program, Core_assignment, EmptyWt_g, DryWt_g, Mass_g, Moisture) %>%
dplyr::mutate(Stop_datetime = as.POSIXct(strptime(Stop_datetime,format = "%m/%d/%Y %H:%M")), #f-ing datetime
#  # calculate moisture content for each core
DryWt_g = round(DryWt_g,2),
MoistWt_g = Mass_g - EmptyWt_g,
Water_g = MoistWt_g - DryWt_g,
Moisture_perc = round(((Water_g/DryWt_g)*100),2))
View(mass)
mass %>% group_by(Core) %>%
dplyr::mutate(Hours = as.integer(difftime(Stop_datetime, min(Stop_datetime), units = "hours"))) ->
massdata
ggplot(massdata, aes(Stop_datetime, Moisture_perc)) +
geom_point() + geom_line()+
facet_wrap(~Core_assignment)+
ylim(0,175)
massdata %>%
group_by(Core) %>%
mutate(moisture = if_else(Stop_datetime == max(Stop_datetime),Moisture_perc,as.numeric(NA))) %>%
dplyr::filter(!is.na(moisture)) %>%
ungroup %>%
group_by(Core_assignment) %>%
dplyr::summarize(moisture = round(mean(moisture),2),
time = max(Stop_datetime))->current_moisture
print("Current moisture conditions")
knitr::kable(current_moisture)
source("1-moisture_tracking.R")
View(mass)
source("1-moisture_tracking.R")
ggplot(mass, aes(Stop_datetime, Moisture_perc)) +
geom_point() + geom_line()+
facet_wrap(~Core_assignment)+
ylim(0,175)
massdata %>%
group_by(Core) %>%
mutate(moisture = if_else(Stop_datetime == max(Stop_datetime),Moisture_perc,as.numeric(NA))) %>%
dplyr::filter(!is.na(moisture)) %>%
ungroup %>%
group_by(Core_assignment) %>%
dplyr::summarize(moisture = round(mean(moisture),2),
massdata %>%
group_by(Core) %>%
mutate(moisture = if_else(Stop_datetime == max(Stop_datetime),Moisture_perc,as.numeric(NA))) %>%
dplyr::filter(!is.na(moisture)) %>%
ungroup %>%
group_by(Core_assignment) %>%
dplyr::summarize(moisture = round(mean(moisture),2),
time = max(Stop_datetime))->current_moisture
massdata %>%
group_by(Core) %>%
mutate(moisture = if_else(Stop_datetime == max(Stop_datetime),Moisture_perc,as.numeric(NA))) %>%
dplyr::filter(!is.na(moisture)) %>%
ungroup %>%
group_by(Core_assignment) %>%
dplyr::summarize(moisture = round(mean(moisture),2),
time = max(Stop_datetime))->current_moisture
mass %>% group_by(Core) %>%
dplyr::mutate(Hours = as.integer(difftime(Stop_datetime, min(Stop_datetime), units = "hours"))) ->
massdata
massdata %>%
group_by(Core) %>%
mutate(moisture = if_else(Stop_datetime == max(Stop_datetime),Moisture_perc,as.numeric(NA))) %>%
dplyr::filter(!is.na(moisture)) %>%
ungroup %>%
group_by(Core_assignment) %>%
dplyr::summarize(moisture = round(mean(moisture),2),
time = max(Stop_datetime))->current_moisture
View(current_moisture)
View(massdata)
source("1-moisture_tracking.R")
View(mass)
source("1-moisture_tracking.R")
View(mass)
